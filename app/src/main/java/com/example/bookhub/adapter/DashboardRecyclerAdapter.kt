package com.example.bookhub.adapter

import android.content.Context
import android.content.Intent
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.LinearLayout
import android.widget.TextView
import android.widget.Toast
import androidx.recyclerview.widget.RecyclerView
import com.example.bookhub.R
import com.example.bookhub.activity.DescriptionActivity
import com.example.bookhub.model.Book
import com.squareup.picasso.Picasso
import kotlinx.android.synthetic.main.recycler_dashboard_single_row.view.*
//The data generated by the activity or the fragment is sent to the adapter, so primary constructors are needed

class DashboardRecyclerAdapter(val context:Context, val itemList: ArrayList<Book>):
    RecyclerView.Adapter<DashboardRecyclerAdapter.DashboardViewHolder>() // Writing this links the adapter class to the RecyclerView
{
    //As the adapter class will contain a ViewHolder, we need to implement the class ViewHolder
    class DashboardViewHolder(view: View): RecyclerView.ViewHolder(view){
        val txtBookName:TextView=view.findViewById(R.id.txtBookName)
        val txtBookAuthor: TextView=view.findViewById(R.id.txtBookAuthor)
        val txtBookPrice: TextView=view.findViewById(R.id.txtBookPrice)
        val txtBookRating: TextView=view.findViewById(R.id.txtBookRating)
        val imgBookImage: ImageView =view.findViewById(R.id.imgBookImage)
        val listContent: LinearLayout=view.findViewById(R.id.listContent)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): DashboardViewHolder {
        val view=LayoutInflater.from(parent.context).inflate(R.layout.recycler_dashboard_single_row,parent,false)//from(parent.context) is for ViewHolder
            // .inflate is for the position

        return DashboardViewHolder(view)
    }

    override fun getItemCount(): Int {//stores total number of items in the list
        return itemList.size
    }

    override fun onBindViewHolder(holder: DashboardViewHolder, position: Int) {//this method recycles and reuses the ViewHolder
        //Now, we need to place all the items of the list in their position
        val book=itemList[position]//setting zeroth position of itemList
        holder.txtBookName.text=book.bookName
        holder.txtBookAuthor.text=book.bookAuthor
        holder.txtBookPrice.text=book.price
        holder.txtBookRating.text=book.bookRating
        //holder.imgBookImage.setImageResource(book.imgBookImage)
        //Picasso.get().load("https://i.imgur.com/DvpvklR.png").into(holder.imgBookImage);
        Picasso.get().load(book.imgBookImage).error(R.drawable.default_book_cover).into(holder.imgBookImage)//error method takes care of the errors
        // and puts a default image

        holder.listContent.setOnClickListener{
            val intent=Intent(context,DescriptionActivity::class.java)//navigates to the DescriptionActivity from the DashboardFragment
            intent.putExtra("book_id",book.bookId)
            context.startActivity(intent)
        }

        /*holder.listContent.setOnClickListener{
            Toast.makeText(context,"Clicked on ${holder.txtBookName.text}",Toast.LENGTH_LONG).show()
        }*/
        //holder.textView.text= text.toString()//for every new position of the ViewHolder, the value of this variable gets changed

//Note: Always remove the TODO line from here while implementing methods

    }

}